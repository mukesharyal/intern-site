{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukesh Aryal\\\\Desktop\\\\intern-site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Card from \"./components/Card\";\nimport Filter from \"./components/Filter\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  let [wholeData, setWholeData] = React.useState([]);\n  const [data, setData] = React.useState([]);\n  const [filters, setFilters] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://storage.googleapis.com/programiz-static/hiring/software/job-listing-page-challenge/data.json\").then(result => result.json()).then(result => {\n      setWholeData(result);\n      setData(result);\n    });\n  }, []);\n  React.useEffect(() => {\n    const arr = [];\n    for (let i = 0; i < wholeData.length; i++) {\n      for (let j = 0; j < filters.length; j++) {\n        if (wholeData[i].keywords.includes(filters[j])) {\n          if (!arr.includes(wholeData[i])) {\n            arr.push(wholeData[i]);\n          }\n        }\n      }\n    }\n    if (arr.length == 0) {\n      setData(wholeData);\n    } else {\n      setData(arr);\n    }\n  }, [filters]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      filters: filters,\n      setFilters: setFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      content: item,\n      filters: filters,\n      setFilters: setFilters\n    }, item.posted_on, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this))]\n  }, void 0, true);\n}\n_s(App, \"DLP6V9mXhBS1m8oRdNH04B26bdo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Card","Filter","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","wholeData","setWholeData","useState","data","setData","filters","setFilters","useEffect","fetch","then","result","json","arr","i","length","j","keywords","includes","push","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","content","posted_on","_c","$RefreshReg$"],"sources":["C:/Users/Mukesh Aryal/Desktop/intern-site/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport Card from \"./components/Card\";\r\nimport Filter from \"./components/Filter\";\r\nimport \"./App.css\"\r\n\r\nexport default function App()\r\n{\r\n    let [wholeData, setWholeData] = React.useState([]);\r\n    \r\n    const [data, setData] = React.useState([]);\r\n\r\n    const [filters, setFilters] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        fetch(\"https://storage.googleapis.com/programiz-static/hiring/software/job-listing-page-challenge/data.json\")\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n            setWholeData(result);\r\n            setData(result);\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        const arr = [];\r\n\r\n        for(let i = 0; i < wholeData.length; i++)\r\n        {\r\n            for(let j = 0; j < filters.length; j++)\r\n            {\r\n                if(wholeData[i].keywords.includes(filters[j]))\r\n                {\r\n                    if(!arr.includes(wholeData[i]))\r\n                    {\r\n                        arr.push(wholeData[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(arr.length == 0)\r\n        {\r\n            setData(wholeData);\r\n        }\r\n        else\r\n        {\r\n            setData(arr);\r\n        }\r\n    }, [filters]);\r\n\r\n    \r\n    return(\r\n        <>\r\n            <Filter\r\n                filters={filters}\r\n                setFilters={setFilters}\r\n            />\r\n            {data.map(\r\n                        (item) => \r\n                        <Card\r\n                            key={item.posted_on}\r\n                            content={item}\r\n                            filters={filters}\r\n                            setFilters={setFilters}\r\n                        />\r\n                    )\r\n            }\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElB,eAAe,SAASC,GAAGA,CAAA,EAC3B;EAAAC,EAAA;EACI,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGf,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EAEhDX,KAAK,CAACgB,SAAS,CAAC,MAAM;IAClBC,KAAK,CAAC,sGAAsG,CAAC,CAC5GC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAAEC,MAAM,IAAK;MACdT,YAAY,CAACS,MAAM,CAAC;MACpBN,OAAO,CAACM,MAAM,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENnB,KAAK,CAACgB,SAAS,CAAC,MAAM;IAClB,MAAMK,GAAG,GAAG,EAAE;IAEd,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,SAAS,CAACc,MAAM,EAAED,CAAC,EAAE,EACxC;MACI,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,OAAO,CAACS,MAAM,EAAEC,CAAC,EAAE,EACtC;QACI,IAAGf,SAAS,CAACa,CAAC,CAAC,CAACG,QAAQ,CAACC,QAAQ,CAACZ,OAAO,CAACU,CAAC,CAAC,CAAC,EAC7C;UACI,IAAG,CAACH,GAAG,CAACK,QAAQ,CAACjB,SAAS,CAACa,CAAC,CAAC,CAAC,EAC9B;YACID,GAAG,CAACM,IAAI,CAAClB,SAAS,CAACa,CAAC,CAAC,CAAC;UAC1B;QACJ;MACJ;IACJ;IACA,IAAGD,GAAG,CAACE,MAAM,IAAI,CAAC,EAClB;MACIV,OAAO,CAACJ,SAAS,CAAC;IACtB,CAAC,MAED;MACII,OAAO,CAACQ,GAAG,CAAC;IAChB;EACJ,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAGb,oBACIV,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA,CAACF,MAAM;MACHY,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDpB,IAAI,CAACqB,GAAG,CACIC,IAAI,iBACL9B,OAAA,CAACH,IAAI;MAEDkC,OAAO,EAAED,IAAK;MACdpB,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA;IAAW,GAHlBmB,IAAI,CAACE,SAAS;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAItB,CACL,CAAC;EAAA,eAEX,CAAC;AAEX;AAACxB,EAAA,CA9DuBD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}